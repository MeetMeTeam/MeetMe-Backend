basePath: /api
definitions:
  interfaces.InviteRequest:
    properties:
      targetMailAddress:
        example: winner@mail.com
        type: string
    type: object
  interfaces.Login:
    properties:
      email:
        example: winner@mail.com
        type: string
      password:
        example: winner
        type: string
    required:
    - email
    - password
    type: object
  interfaces.RegisterRequest:
    properties:
      birthday:
        example: "2023-08-12"
        type: string
      email:
        example: winner@mail.com
        type: string
      firstname:
        example: Kanyapat
        type: string
      image:
        type: string
      lastname:
        example: Wittayamitkul
        type: string
      password:
        example: winner
        type: string
      username:
        example: winnerkypt
        type: string
    required:
    - email
    - firstname
    - image
    - password
    type: object
  utils.DataResponse:
    properties:
      data: {}
      message:
        type: string
    type: object
host: meetme-backend.com
info:
  contact: {}
  description: This is a API for Meet Me.
  title: Meet Me API
  version: "1.0"
paths:
  /friends:
    get:
      consumes:
      - application/json
      description: Get Friends List.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.DataResponse'
      security:
      - BearerAuth: []
      summary: List Friends.
      tags:
      - friends
  /invitations:
    get:
      consumes:
      - application/json
      description: Check Invitation List.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.DataResponse'
      security:
      - BearerAuth: []
      summary: List Invitation.
      tags:
      - invitations
    post:
      consumes:
      - application/json
      description: Invite friend by email.
      parameters:
      - description: request body invite friend
        in: body
        name: users
        required: true
        schema:
          $ref: '#/definitions/interfaces.InviteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.DataResponse'
      security:
      - BearerAuth: []
      summary: Invite Friend
      tags:
      - invitations
    put:
      consumes:
      - application/json
      description: Accept All Invitations.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.DataResponse'
      security:
      - BearerAuth: []
      summary: Accept All Invitations
      tags:
      - invitations
  /invitations/{id}:
    delete:
      consumes:
      - application/json
      description: Reject Invitation by Id.
      parameters:
      - description: Invitation ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.DataResponse'
      security:
      - BearerAuth: []
      summary: Reject Invitation
      tags:
      - invitations
    put:
      consumes:
      - application/json
      description: Accept Invitation by Id.
      parameters:
      - description: Invitation ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.DataResponse'
      security:
      - BearerAuth: []
      summary: Accept Invitation
      tags:
      - invitations
  /users:
    get:
      consumes:
      - application/json
      description: return list users.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.DataResponse'
      summary: Get all users
      tags:
      - users
  /users/login:
    post:
      consumes:
      - application/json
      description: Login user.
      parameters:
      - description: request body login
        in: body
        name: users
        required: true
        schema:
          $ref: '#/definitions/interfaces.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.DataResponse'
      summary: Login
      tags:
      - users
  /users/register:
    post:
      consumes:
      - application/json
      description: Create user.
      parameters:
      - description: request body register
        in: body
        name: users
        required: true
        schema:
          $ref: '#/definitions/interfaces.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.DataResponse'
      summary: Register user
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
